{"name": "Успешный вход", "status": "failed", "statusDetails": {"message": "AssertionError: Page URL expected to be 'https://dev.smorodina.ru/partner/summary'\nActual value: https://dev.smorodina.ru/operators/authorization \nCall log:\n  - PageAssertions.to_have_url with timeout 5000ms\n  -   - waiting for locator(\":root\")\n  -     9 × locator resolved to <html lang=\"ru\" mode=\"md\" class=\"ion-ce plt-tablet plt-desktop md\">…</html>\n  -       - unexpected value \"https://dev.smorodina.ru/operators/authorization\"", "trace": "page = <Page url='https://dev.smorodina.ru/operators/authorization'>\nintercept_requests = [<Request url='https://dev.smorodina.ru/' method='GET'>, <Request url='https://api-maps.yandex.ru/v3/?apikey=c3134283-...0;0,400;0,500;0,600;0,700;0,800;0,900;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap' method='GET'>, ...]\n\n    @allure.feature('Продавец')\n    @allure.story('Авторизация продавца')\n    @allure.title('Успешный вход')\n    def test_seller_auth1(page: Page, intercept_requests):  # Используем фикстуру\n        assertions = Assertions(page)  # Создаем экземпляр Assertions\n        main_page = MainPage(page)  # Создаем экземпляр MainPage\n        main_page.seller_auth(SELLER_LOGIN1, SELLER_PASSWORD1) # Основной поток теста с использованием метода seller_auth\n>       assertions.check_url(EXPECTED_URL_AFTER_LOGIN_SELLER) # Проверяем конечный URL после логина\n\ntests\\Seller\\auth\\test_seller_auth.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <data.assertions.Assertions object at 0x000001CB899F0A50>, expected_url = 'https://dev.smorodina.ru/partner/summary'\n\n    @allure.step('Проверка URL')\n    def check_url(self, expected_url: str):\n>       expect(self.page).to_have_url(expected_url)\nE       AssertionError: Page URL expected to be 'https://dev.smorodina.ru/partner/summary'\nE       Actual value: https://dev.smorodina.ru/operators/authorization \nE       Call log:\nE         - PageAssertions.to_have_url with timeout 5000ms\nE         -   - waiting for locator(\":root\")\nE         -     9 × locator resolved to <html lang=\"ru\" mode=\"md\" class=\"ion-ce plt-tablet plt-desktop md\">…</html>\nE         -       - unexpected value \"https://dev.smorodina.ru/operators/authorization\"\n\ndata\\assertions.py:12: AssertionError"}, "steps": [{"name": "Авторизация продавца", "status": "passed", "steps": [{"name": "Открытие страницы 'https://dev.smorodina.ru/'", "status": "passed", "steps": [{"name": "Ожидание полной загрузки страницы", "status": "passed", "start": 1741180313498, "stop": 1741180315261}], "parameters": [{"name": "url", "value": "'https://dev.smorodina.ru/'"}], "start": 1741180312378, "stop": 1741180315261}, {"name": "Кликнуть на элемент ''кнопка Искать туры''", "status": "passed", "parameters": [{"name": "element_name", "value": "'кнопка Искать туры'"}], "start": 1741180315261, "stop": 1741180315299}, {"name": "Кликнуть на элемент ''кнопка Вход''", "status": "passed", "parameters": [{"name": "element_name", "value": "'кнопка Вход'"}], "start": 1741180315299, "stop": 1741180315575}, {"name": "Кликнуть на элемент ''кнопка Организатор туров''", "status": "passed", "parameters": [{"name": "element_name", "value": "'кнопка Организатор туров'"}], "start": 1741180315575, "stop": 1741180315637}, {"name": "Заполнить элемент ''поле Логин'' значением ''avtotestsellersmorodina2@gmail.com''", "status": "passed", "parameters": [{"name": "element_name", "value": "'поле Логин'"}, {"name": "value", "value": "'avtotestsellersmorodina2@gmail.com'"}], "start": 1741180315637, "stop": 1741180315663}, {"name": "Заполнить элемент ''поле Пароль'' значением ''Nik123''", "status": "passed", "parameters": [{"name": "element_name", "value": "'поле Пароль'"}, {"name": "value", "value": "'Nik123'"}], "start": 1741180315663, "stop": 1741180315686}, {"name": "Кликнуть на элемент ''кнопка Вход в авторизации продавца''", "status": "passed", "parameters": [{"name": "element_name", "value": "'кнопка Вход в авторизации продавца'"}], "start": 1741180315687, "stop": 1741180315796}, {"name": "Ожидание полной загрузки страницы", "status": "passed", "start": 1741180315796, "stop": 1741180315812}], "parameters": [{"name": "login", "value": "'avtotestsellersmorodina2@gmail.com'"}, {"name": "password", "value": "'Nik123'"}], "start": 1741180312378, "stop": 1741180315812}, {"name": "Проверка URL", "status": "failed", "statusDetails": {"message": "AssertionError: Page URL expected to be 'https://dev.smorodina.ru/partner/summary'\nActual value: https://dev.smorodina.ru/operators/authorization \nCall log:\n  - PageAssertions.to_have_url with timeout 5000ms\n  -   - waiting for locator(\":root\")\n  -     9 × locator resolved to <html lang=\"ru\" mode=\"md\" class=\"ion-ce plt-tablet plt-desktop md\">…</html>\n  -       - unexpected value \"https://dev.smorodina.ru/operators/authorization\"\n\n", "trace": "  File \"C:\\Users\\Nikita\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"F:\\Smorodina\\Autotests\\NikitaTimoshin1995-Smorodina_Autotests_Python_Playwright-1\\data\\assertions.py\", line 12, in check_url\n    expect(self.page).to_have_url(expected_url)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^\n  File \"C:\\Users\\Nikita\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\sync_api\\_generated.py\", line 18951, in to_have_url\n    self._sync(\n    ~~~~~~~~~~^\n        self._impl_obj.to_have_url(\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n            urlOrRegExp=url_or_reg_exp, timeout=timeout, ignoreCase=ignore_case\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        )\n        ^\n    )\n    ^\n  File \"C:\\Users\\Nikita\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_sync_base.py\", line 115, in _sync\n    return task.result()\n           ~~~~~~~~~~~^^\n  File \"C:\\Users\\Nikita\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_assertions.py\", line 127, in to_have_url\n    await self._expect_impl(\n    ...<4 lines>...\n    )\n  File \"C:\\Users\\Nikita\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_assertions.py\", line 74, in _expect_impl\n    raise AssertionError(\n        f\"{out_message}\\nActual value: {actual} {format_call_log(result.get('log'))}\"\n    )\n"}, "parameters": [{"name": "expected_url", "value": "'https://dev.smorodina.ru/partner/summary'"}], "start": 1741180315812, "stop": 1741180320834}], "parameters": [{"name": "browser_name", "value": "'chromium'"}], "start": 1741180312378, "stop": 1741180320839, "uuid": "fa02b469-84d5-461a-99b3-abd49ef420ce", "historyId": "d4d2673863dca1fcd06468f8734da371", "testCaseId": "a33d468bea5537279da9840821db5632", "fullName": "tests.Seller.auth.test_seller_auth#test_seller_auth1", "labels": [{"name": "feature", "value": "Продавец"}, {"name": "story", "value": "Авторизация продавца"}, {"name": "parentSuite", "value": "tests.Seller.auth"}, {"name": "suite", "value": "test_seller_auth"}, {"name": "host", "value": "DESKTOP-7M1TI5K"}, {"name": "thread", "value": "14496-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.Seller.auth.test_seller_auth"}]}